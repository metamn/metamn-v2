{
  "name": "gulp-image-resize",
  "description": "Resizing images made easy.",
  "version": "0.6.0",
  "homepage": "https://github.com/scalableminds/gulp-image-resize",
  "author": {
    "name": "Norman Rzepka",
    "email": "norman@scm.io",
    "url": "http://scm.io"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/scalableminds/gulp-image-resize"
  },
  "bugs": {
    "url": "https://github.com/scalableminds/gulp-image-resize/issues"
  },
  "license": "MIT",
  "main": "index.js",
  "engines": {
    "node": ">= 0.10.0"
  },
  "scripts": {
    "test": "gulp test"
  },
  "devDependencies": {
    "gulp": "~3.5.5",
    "gm": "~1.14.2",
    "gulp-clean": "~0.2.4",
    "gulp-jshint": "~1.5.0",
    "run-sequence": "~0.3.6",
    "jshint-stylish": "~0.1.5",
    "gulp-mocha": "~0.4.1"
  },
  "keywords": [
    "gulpplugin"
  ],
  "dependencies": {
    "async": "~0.2.8",
    "gulp-gm": "~0.0.3",
    "through2": "~0.4.1",
    "gulp-util": "~2.2.14",
    "lodash": "~2.4.1"
  },
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-image-resize [![Build Status](https://drone.io/github.com/scalableminds/gulp-image-resize/status.png)](https://drone.io/github.com/scalableminds/gulp-image-resize/latest)\n\n\n> Resizing images made easy - thanks to [GraphicsMagick](http://www.graphicsmagick.org/) or [ImageMagick](http://www.imagemagick.org/).\n> Fork of [grunt-image-resize](https://github.com/excellenteasy/grunt-image-resize).\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/gulp-image-resize)\n\n```\nnpm install --save-dev gulp-image-resize\n```\n\n### GraphicsMagick or ImageMagick\nMake sure GraphicsMagick or ImageMagick is installed on your system and properly set up in your `PATH`.\n\nUbuntu:\n\n```shell\napt-get install imagemagick\napt-get install graphicsmagick\n```\n\nMac OS X (using [Homebrew](http://brew.sh/)):\n\n```shell\nbrew install imagemagick\nbrew install graphicsmagick\n```\n\nWindows & others: \n\n[http://www.imagemagick.org/script/binary-releases.php](http://www.imagemagick.org/script/binary-releases.php)\n\nConfirm that ImageMagick is properly set up by executing `convert -help` in a terminal.\n\n\n## Example\n\n```js\nvar gulp = require('gulp');\nvar imageResize = require('gulp-image-resize');\n\ngulp.task('default', function () {\n  gulp.src('test.png')\n    .pipe(imageResize({ \n      width : 100,\n      height : 100,\n      crop : true,\n      upscale : false\n    }))\n    .pipe(gulp.dest('dist'));\n});\n```\n\n## API\n\n### imageResize(options)\n\n#### options.width\n\nType: `Number`  \nDefault value: `0` (only if height is defined)\n\nA number pixel value that is the target width.\n\n\n#### options.height\n\nType: `Number`  \nDefault value: `0` (only if width is defined)\n\nA number pixel value that is the target height.\n\n\n#### options.upscale\n\nType: `Boolean`  \nDefault value: `false`\n\nDetermines whether images will be upscaled. If set to `false` (default), image will be copied instead of resized if it would be upscaled by resizing.\n\n\n#### options.crop\n\nType: `Boolean`  \nDefault value: `false`\n\nDetermines whether images will be cropped after resizing to exactly match `options.width` and `options.height`.\n\n\n#### options.gravity\n\nType: `String`  \nDefault value: `Center`  \nPossible values: `NorthWest`, `North`, `NorthEast`, `West`, `Center`, `East`, `SouthWest`, `South`, `SouthEast`\n\nWhen cropping images this sets the image gravity. Doesn't have any effect, if `options.crop` is `false`.\n\n\n#### options.quality\n\nType: `Number`  \nDefault value: `1`\n\nDetermines the output quality of the resized image. Ranges from `0` (really bad) to `1` (almost lossless). Only applies to jpg images.\n\n\n#### options.format\n\nType: `String`  \nDefault value: Format of the input file  \nPossible values: `gif`, `png`, `jpeg` etc.\n\nOverride the output format of the processed file.\n\n#### options.filter\n\nType: `String`  \nPossible values: `Point`, `Box`, `Triangle`, `Hermite`, `Hanning`, `Hamming`, `Blackman`, `Gaussian`, `Quadratic`, `Cubic`, `Catrom`, `Mitchell`, `Lanczos`, `Bessel`, `Sinc`\n\nSet the filter to use when resizing (e.g. Catrom is very good for reduction, while hermite is good for enlargement).\n\n#### options.sharpen\n\nType: `Boolean`  \nDefault value: `false`\n\nSet to `true` to apply a slight unsharp mask after resizing.\n\n#### options.samplingFactor\n\nType: `Array[Cr, Cb]`  \nPossible values: `[2, 2]` for 4:2:2, `[1, 1]` for 4:1:1\n\nDefine chroma subsampling\n\n#### options.imageMagick\n\nType: `Boolean`  \nDefault value: `false`\n\nSet to `true` when using ImageMagick instead of GraphicsMagick.\n\n\n## More Examples\n```js\n// Converting from png to jpeg. No resizing.\ngulp.task('convert_png', function () {\n  return gulp.src('test.png')\n    .pipe(imageResize({ format : 'jpeg' }))\n    .pipe(gulp.dest('dist'));\n});\n\n// Only specify one dimension. Output image won't exceed this value.\ngulp.task('width', function () {\n  gulp.src('test.png')\n    .pipe(imageResize({ \n      width : 100\n    }))\n    .pipe(gulp.dest('dist'));\n});\n```\n\n## Recommended modules\n\n* [concurrent-transform](https://github.com/segmentio/concurrent-transform): parallelize image resizing\n```js\nvar parallel = require(\"concurrent-transform\");\nvar os = require(\"os\");\n\ngulp.task(\"parallel\", function () {\n  gulp.src(\"src/**/*.{jpg,png}\")\n    .pipe(parallel(\n      imageResize({ width : 100 }),\n      os.cpus().length\n    ))\n    .pipe(gulp.dest(\"dist\"));\n});\n```\n\n* [gulp-changed](https://www.npmjs.org/package/gulp-changed/): only resize changed images\n```js\nvar changed = require(\"gulp-changed\");\n\ngulp.task(\"changed\", function () {\n  gulp.src(\"src/**/*.{jpg,png}\")\n    .pipe(changed(\"dist\"))\n    .pipe(imageResize({ width : 100 }))\n    .pipe(gulp.dest(\"dist\"));\n});\n```\n\n* [gulp-rename](https://www.npmjs.org/package/gulp-rename/): add a suffix or prefix\n```js\nvar rename = require(\"gulp-rename\");\n\ngulp.task(\"suffix\", function () {\n  gulp.src(\"src/**/*.{jpg,png}\")\n    .pipe(imageResize({ width : 100 }))\n    .pipe(rename(function (path) { path.basename += \"-thumbnail\"; }))\n    .pipe(gulp.dest(\"dist\"));\n});\n```\n\n## Tests\n\n1. You need both ImageMagick and GraphicsMagick installed on your system to run the tests.\n2. Install all npm dev dependencies `npm install`\n3. Install gulp globally `npm install -g gulp`\n4. Run `gulp test`\n\n\n## License\n\nMIT Â© [scalable minds](http://scm.io)\n\n",
  "readmeFilename": "README.md",
  "_id": "gulp-image-resize@0.6.0",
  "dist": {
    "shasum": "7e9735e14c3d35f3a3e303b6736936b66f9af085"
  },
  "_from": "gulp-image-resize@^0.6.0",
  "_resolved": "https://registry.npmjs.org/gulp-image-resize/-/gulp-image-resize-0.6.0.tgz"
}
